# add $HOME/.bin to $PATH
export PATH=$HOME/.bin:$PATH

grml_theme_add_token k8s-context -f k8s_context_func '%F{magenta}' '%f '

zstyle ':vcs_info:*' actionformats "(%b|%a) " "zsh: %r"
zstyle ':vcs_info:*' formats       "%{$fg[cyan]%}(%{$reset_color%}%b%{$fg[cyan]%})%{$reset_color%} "    "zsh: %r"

zstyle ':prompt:grml:*:items:at' token '//'
zstyle ':prompt:grml:*:items:at' pre '%F{white}'

zstyle ':prompt:grml:*:items:host' token '%m'
zstyle ':prompt:grml:*:items:host' pre '%F{cyan}'

zstyle ':prompt:grml:*:items:user' token '%n'
zstyle ':prompt:grml:*:items:user' pre '%F{blue}'

zstyle ':prompt:grml:*:items:path' token ' %40<..<%~%<< '
zstyle ':prompt:grml:*:items:path' pre '%F{yellow}'

zstyle ':prompt:grml:*:items:percent' token '%% %F{reset_color}'


zstyle ':prompt:grml:left:setup' items host at user path vcs k8s-context percent 
zstyle ':prompt:grml:right:setup' items sad-smiley

alias ls='ls --color=auto'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias pacman='sudo pacman'
alias pcs='pacman -Ss'
alias pcsu='pacman -Syu'
alias ssh='TERM=rxvt ssh -X'
alias 10cpu='ps -auxf | sort -nr -k 3 | head -10'
alias 10mem='ps -auxf | sort -nr -k 4 | head -10'
alias wpid="xargs -I {} bash -c 'ps -p {} -o comm=' <<<"
alias nstat='netstat -tulpn'
alias v="vim"
alias vi="vim"
alias sv="sudo vim"
alias rdesktop='rdesktop -g 1360x740'

ssh-agent () {
    [[ -S $SSH_AUTH_SOCK ]] && return
    if [[ -f ~/.agent.$HOST ]] ; then # existing agent data, try it and break if it works
        eval `cat ~/.agent.$HOST`
        ps -o "user,command" -p $SSH_AGENT_PID | tail -1 | egrep -q "^${USER}.*ssh-agent\$" && return
    fi
    # else create new agent
    command ssh-agent | grep -v echo > ~/.agent.$HOST
    eval `cat ~/.agent.$HOST`
}

ssh-agent

k8s_context_func () {
  if [ -e ${HOME}/.kube/config ] ; then
    K8S_CONTEXT=$( cat ${HOME}/.kube/config | grep current-context | cut -d ' ' -f 2 )
    REPLY=${K8S_CONTEXT+${K8S_CONTEXT:t}}
  fi
}

if [ -d $HOME/.rbenv ] ; then
  eval "$(rbenv init -)"
fi

if [ -e /usr/local/bin/kubectl ] ; then
  source <(/usr/local/bin/kubectl completion zsh)
fi

# disable annoying pc speaker
xset -b


# Automatic startx
[[ -z $DISPLAY && $XDG_VTNR -eq 1 ]] && exec startx

